{"version":3,"sources":["DropDown.js","removeDupes.js","index.js"],"names":["DropDown","props","onChange","e","getId","name","id","defaultValue","options","map","o","i","key","removeDupes","arr","prop","set","Set","a","Array","from","WordCloud","useState","data","setData","date","setDate","newspaper","setNewsPaper","target","selectedOptions","textContent","useEffect","fetch","process","then","res","json","values","Object","val","catch","err","console","error","className","filter","d","src","alt","ReactDOM","render","document","getElementById"],"mappings":"6LAiBeA,EAfE,SAAAC,GACf,OACE,oCACE,4BAAQC,SAAU,SAAAC,GAAC,OAAIF,EAAMG,MAAMD,IAAIE,KAAK,YAAYC,GAAG,aACzD,4BAAQC,aAAcN,EAAMK,IAAKL,EAAMK,IACtCL,EAAMO,QAAQC,KAAI,SAACC,EAAGC,GAAJ,OACjB,4BAAQL,GAAIL,EAAMK,GAAIM,IAAKD,GACxBD,SCTAG,EAAc,SAACC,EAAKC,GAC/B,IAAMC,EAAM,IAAIC,IAAIH,EAAIL,KAAI,SAAAS,GAAC,OAAIA,EAAEH,OACnC,OAAOI,MAAMC,KAAKJ,ICKdK,G,MAAY,WAAO,IAAD,EACEC,mBAAS,IADX,mBACfC,EADe,KACTC,EADS,OAEEF,mBAAS,MAFX,mBAEfG,EAFe,KAETC,EAFS,OAGYJ,mBAAS,MAHrB,mBAGfK,EAHe,KAGJC,EAHI,KAKhBxB,EAAQ,SAAAD,GAC2B,SAAnCA,EAAE0B,OAAOC,gBAAgB,GAAGxB,GAC9BoB,EAAQvB,EAAE0B,OAAOC,gBAAgB,GAAGC,aAEpCH,EAAazB,EAAE0B,OAAOC,gBAAgB,GAAGC,cAkB7C,OAdAC,qBAAU,WACRC,MAEMC,2DAGHC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAZ,GACJ,IAAMe,EAASC,OAAOD,OAAOf,GAC7BC,EAAQc,EAAO7B,KAAI,SAAC+B,EAAK7B,GAAN,sBAAkB6B,EAAlB,CAAuBlC,GAAIK,WAE/C8B,OAAM,SAAAC,GAAG,OAAIC,QAAQC,MAAMF,QAC7B,IAGD,yBAAKG,UAAU,OACb,kBAAC,EAAD,CACErC,QAASK,EAAYU,EAAM,aAC3BnB,MAAOA,EACPE,GAAG,cAEL,kBAAC,EAAD,CAAUE,QAASK,EAAYU,EAAM,QAASnB,MAAOA,EAAOE,GAAG,SAC9DiB,EACEuB,QAAO,SAAAC,GAAC,OAAIA,EAAEtB,OAASA,GAAQsB,EAAEpB,YAAcA,KAC/ClB,KAAI,SAACsC,EAAGpC,GAAJ,MACc,SAAjBoC,EAAE,WACA,yBACEnC,IAAKD,EACLqC,IAAKD,EAAE,WACPE,IAAG,wBAAmBF,EAAEpB,UAArB,eAAqCoB,EAAEtB,QAG5C,uBAAGb,IAAKD,GAAR,+CAC+CoC,EAAEpB,UADjD,0BAEkBoB,EAAEtB,KAFpB,YAUZyB,IAASC,OAAO,kBAAC,EAAD,MAAeC,SAASC,eAAe,U","file":"static/js/main.fa6240d5.chunk.js","sourcesContent":["import React from 'react'\n\nconst DropDown = props => {\n  return (\n    <>\n      <select onChange={e => props.getId(e)} name=\"wordcloud\" id=\"wordcloud\">\n        <option defaultValue={props.id}>{props.id}</option>\n        {props.options.map((o, i) => (\n          <option id={props.id} key={i}>\n            {o}\n          </option>\n        ))}\n      </select>\n    </>\n  )\n}\n\nexport default DropDown\n","export const removeDupes = (arr, prop) => {\n  const set = new Set(arr.map(a => a[prop]))\n  return Array.from(set)\n}\n","import React, { useEffect, useState } from 'react'\nimport ReactDOM from 'react-dom'\nimport DropDown from './DropDown'\nimport { removeDupes } from './removeDupes'\n\nimport './index.css'\n\nconst WordCloud = () => {\n  const [data, setData] = useState([])\n  const [date, setDate] = useState(null)\n  const [newspaper, setNewsPaper] = useState(null)\n\n  const getId = e => {\n    if (e.target.selectedOptions[0].id === 'date') {\n      setDate(e.target.selectedOptions[0].textContent)\n    } else {\n      setNewsPaper(e.target.selectedOptions[0].textContent)\n    }\n  }\n\n  useEffect(() => {\n    fetch(\n      process.env.NODE_ENV === 'production'\n        ? process.env.REACT_APP_PROD_URL\n        : process.env.REACT_APP_DEV_URL\n    )\n      .then(res => res.json())\n      .then(data => {\n        const values = Object.values(data)\n        setData(values.map((val, i) => ({ ...val, id: i })))\n      })\n      .catch(err => console.error(err))\n  }, [])\n\n  return (\n    <div className=\"App\">\n      <DropDown\n        options={removeDupes(data, 'newspaper')}\n        getId={getId}\n        id=\"newspaper\"\n      />\n      <DropDown options={removeDupes(data, 'date')} getId={getId} id=\"date\" />\n      {data\n        .filter(d => d.date === date && d.newspaper === newspaper)\n        .map((d, i) =>\n          d['IMG URL'] !== 'none' ? (\n            <img\n              key={i}\n              src={d['IMG URL']}\n              alt={`Wordcloud for ${d.newspaper} on ${d.date}`}\n            />\n          ) : (\n            <p key={i}>\n              Sorry a wordcloud couldn't be generated for {d.newspaper} on the\n              selected date ({d.date}).\n            </p>\n          )\n        )}\n    </div>\n  )\n}\n\nReactDOM.render(<WordCloud />, document.getElementById('root'))\n"],"sourceRoot":""}